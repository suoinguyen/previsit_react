{"ast":null,"code":"var _jsxFileName = \"/Users/suoinguyen/Working/ba-dashboard-static/pre_visit_react/src/components/FormPage.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormPage() {\n  _s();\n  const [tabType, setTabType] = useState(\"property_info\");\n  const [contactBlockId, setContactBlockId] = useState(0);\n  const contactBlockIdRef = useRef(contactBlockId);\n  const [propertyIncludesParkingAreas, setPropertyIncludesParkingAreas] = useState(false);\n  const [propertyHasAHeatedSwimmingPool, setPropertyHasAHeatedSwimmingPool] = useState(false);\n  const [propertyHas1OrMoreRetailStoresGreater5000, setPropertyHas1OrMoreRetailStoresGreater5000] = useState(false);\n  const [propertyHasOneOrMoreRestaurantsCafeterias, setPropertyHasOneOrMoreRestaurantsCafeterias] = useState(false);\n  const [propertyHasNursingAssistedCareFacilities, setPropertyHasNursingAssistedCareFacilities] = useState(false);\n  const [jsonData, setJsonData] = useState([]);\n  const [useTypes, setUseTypes] = useState([]);\n  const [useTypesCreated, setUseTypesCreated] = useState([]);\n  const jsonDataRef = useRef(jsonData);\n  const WEBHOOK_URL = 'https://webhook.site/e3dbb649-e1f3-4743-9fe7-dbc069681dc4';\n  const JSON_FILE = './json/data.json';\n  const MAPPING_JSON_FILE = ['./json/mapping_1.json', './json/mapping_2.json', './json/mapping_3.json', './json/mapping_4.json'];\n  useEffect(() => {\n    contactBlockIdRef.current = contactBlockId;\n    jsonDataRef.current = jsonData;\n  }, [contactBlockId, jsonData]);\n  useEffect(() => {\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_el = el.classList.contains('snap-next') || el.classList.contains('snap-prev');\n      if (!is_el) {\n        el = event.target.closest('.snap-next') || event.target.closest('.snap-prev');\n        if (el) {\n          is_el = true;\n        }\n      }\n      if (is_el) {\n        const snapp_slide = el.closest('.snap-slide');\n        const snap_scroller = snapp_slide.querySelector('.snap-scroller');\n        const snap_item_size = snap_scroller.querySelector('div').clientWidth;\n        if (el.classList.contains('snap-next')) {\n          scrollToNextPage();\n        }\n        if (el.classList.contains('snap-prev')) {\n          scrollToPrevPage();\n        }\n        function scrollToNextPage() {\n          snap_scroller.scrollBy(snap_item_size, 0);\n          snapp_slide.querySelector('.snap-prev').classList.remove(\"hidden\");\n          snapp_slide.querySelector('.snap-prev').classList.add(\"active\");\n        }\n        function scrollToPrevPage() {\n          snap_scroller.scrollBy(-snap_item_size, 0);\n          snapp_slide.querySelector('.snap-next').classList.remove(\"hidden\");\n          snapp_slide.querySelector('.snap-next').classList.add(\"active\");\n        }\n      }\n    });\n    const snap_scrollers = document.querySelectorAll('.snap-scroller');\n    for (const key in snap_scrollers) {\n      if (!snap_scrollers[key] || typeof snap_scrollers[key] !== 'object') {\n        continue;\n      }\n      snap_scrollers[key].addEventListener('scroll', function (e) {\n        const snapp_slide = e.target.closest('.snap-slide');\n        if (e.target.scrollLeft % e.target.offsetWidth === 0) {\n          snapp_slide.querySelector('.snap-prev').classList.add(\"hidden\");\n          snapp_slide.querySelector('.snap-prev').classList.remove(\"active\");\n        } else {\n          snapp_slide.querySelector('.snap-prev').classList.remove(\"hidden\");\n          snapp_slide.querySelector('.snap-prev').classList.add(\"active\");\n        }\n        let scrollWidth = document.querySelector('.snap-scroller').scrollWidth;\n        if (scrollWidth === e.target.scrollLeft + e.target.offsetWidth) {\n          snapp_slide.querySelector('.snap-next').classList.add(\"hidden\");\n          snapp_slide.querySelector('.snap-next').classList.remove(\"active\");\n        } else {\n          snapp_slide.querySelector('.snap-next').classList.remove(\"hidden\");\n          snapp_slide.querySelector('.snap-next').classList.add(\"active\");\n        }\n      });\n    }\n\n    //Collapse block\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_el = el.classList.contains('.collapse-title');\n      if (!is_el) {\n        el = event.target.closest('.collapse-title');\n        if (el) {\n          is_el = true;\n        }\n      }\n      if (is_el) {\n        const parent = el.closest('.block-collapse-wrap');\n        el.querySelector('img').classList.toggle('rotate-180');\n        parent.querySelectorAll('.block-collapsed').forEach(element => {\n          element.classList.toggle('hidden');\n        });\n      }\n    });\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_el = el.classList.contains('.header-collapse');\n      if (!is_el) {\n        el = event.target.closest('.header-collapse');\n        if (el) {\n          is_el = true;\n        }\n      }\n      if (is_el) {\n        const parent = el.parentElement;\n        el.querySelector('svg').classList.toggle('rotate-180');\n        parent.querySelectorAll('.body-collapse').forEach(element => {\n          element.classList.toggle('hidden');\n        });\n      }\n    });\n\n    // Table toggle child\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_el = el.classList.contains('.toggle-child');\n      if (!is_el) {\n        el = event.target.closest('.toggle-child');\n        if (el) {\n          is_el = true;\n        }\n      }\n      if (is_el) {\n        const tr_parent = el.closest('tr.has-child');\n        const table_parent = el.closest('table');\n        let data_child = tr_parent.getAttribute(\"data-child\");\n        const child = table_parent.querySelector('tr.child[data-child=\"' + data_child + '\"]');\n        child.classList.toggle('hidden');\n      }\n    });\n\n    // Func\n    function insertAfter(newNode, existingNode) {\n      existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n    }\n\n    //Add contact\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_el = el.classList.contains('.btn-add-contact');\n      if (!is_el) {\n        el = event.target.closest('.btn-add-contact');\n        if (el) {\n          is_el = true;\n        }\n      }\n      if (is_el) {\n        event.preventDefault();\n        const parent = el.closest('.contact-form-wrap');\n        let parent_clone = parent.cloneNode(true);\n        let parent_id = parent_clone.getAttribute('data-id');\n        const contact_form_frap = document.querySelectorAll('.contact-form-wrap');\n        contact_form_frap.forEach(function (element) {\n          element.querySelector('.btn-remove-contact').classList.remove('hidden');\n          element.querySelector('.btn-add-contact').classList.add('hidden');\n        });\n\n        //Reset all field before\n        let incr = contactBlockIdRef.current + 1;\n        setContactBlockId(incr);\n        parent_clone.setAttribute('data-id', incr);\n        parent_clone.querySelectorAll('input, select, textarea').forEach(function (input) {\n          input.value = '';\n          input.name = input.name.replace(`contact[${parent_id}]`, `contact[${incr}]`);\n        });\n        parent_clone.querySelector('.btn-remove-contact').classList.remove('hidden');\n        parent_clone.querySelector('.btn-add-contact').classList.remove('hidden');\n        insertAfter(parent_clone, parent);\n      }\n    });\n\n    //Delete contact\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_remove_contact_btn = el.classList.contains('.btn-remove-contact');\n      if (!is_remove_contact_btn) {\n        el = event.target.closest('.btn-remove-contact');\n        if (el) {\n          is_remove_contact_btn = true;\n        }\n      }\n      if (is_remove_contact_btn) {\n        event.preventDefault();\n        const parent = el.closest('.contact-form-wrap');\n        const parent_clone = parent.cloneNode(true);\n        const contact_form_frap = document.querySelectorAll('.contact-form-wrap');\n\n        //Remove\n        if (contact_form_frap.length > 1) {\n          parent.remove();\n        }\n        if (contact_form_frap.length == 2) {\n          contact_form_frap.forEach(function (element) {\n            element.querySelector('.btn-remove-contact').classList.remove('hidden');\n            element.querySelector('.btn-add-contact').classList.remove('hidden');\n          });\n        }\n      }\n    });\n    document.getElementById('questionaire-form').addEventListener('submit', async function handleClick(event) {\n      event.preventDefault();\n      const form_data = Object.fromEntries(new FormData(event.target));\n      let file = form_data.months_in_use_image;\n      if (file) {\n        form_data.months_in_use_image = await getBase64(file);\n        submitForm(form_data);\n      }\n    });\n\n    //Delete UseType\n    document.addEventListener('click', function (event) {\n      let el = event.target;\n      let is_remove_usetype_btn = el.classList.contains('.btn-remove-usetype');\n      if (!is_remove_usetype_btn) {\n        el = event.target.closest('.btn-remove-usetype');\n        if (el) {\n          is_remove_usetype_btn = true;\n        }\n      }\n      if (is_remove_usetype_btn) {\n        event.preventDefault();\n        const parent = el.closest('.block-collapse-wrap');\n\n        //Remove\n        if (parent) {\n          parent.remove();\n          const selected_usetype = el.getAttribute('data-usetype');\n          if (selected_usetype) {\n            const index = useTypesCreated.indexOf(selected_usetype);\n            if (index > -1) {\n              useTypesCreated.splice(index, 1);\n            }\n          }\n        }\n      }\n    });\n    async function loadPropertyUseTypes(params) {\n      var _result$Body, _result$Body$payload;\n      let usetypes_cache = localStorage.getItem('usetypes_cache');\n      if (usetypes_cache) {\n        let usetypes = JSON.parse(usetypes_cache);\n        setUseTypes(usetypes);\n        document.getElementById(\"usetypes\").removeAttribute('disabled');\n        let elements = document.getElementsByClassName('spinner');\n        while (elements.length > 0) {\n          elements[0].parentNode.removeChild(elements[0]);\n        }\n        return;\n      }\n      let list_mapped_use_types = [];\n      for (const map_item in MAPPING_JSON_FILE) {\n        if (list_mapped_use_types.length > 0) break;\n        let result = await loadJsonData(MAPPING_JSON_FILE[map_item]);\n        let items = result.items;\n        let list_usetypes = [];\n        if (items && Array.isArray(items)) {\n          for (const key in items) {\n            const item = items[key];\n            const mapping_id = item['mapping_id'];\n            if (mapping_id === 'property_use_type') {\n              list_usetypes = item['options']['response_set']['responses'];\n              list_mapped_use_types = list_usetypes;\n              break;\n            }\n          }\n        }\n      }\n      const result = await getDataJson();\n      let mel = result === null || result === void 0 ? void 0 : (_result$Body = result.Body) === null || _result$Body === void 0 ? void 0 : (_result$Body$payload = _result$Body.payload) === null || _result$Body$payload === void 0 ? void 0 : _result$Body$payload.mel;\n      let mel_merge = [];\n      let usetypes = [];\n      for (const buildingId in mel) {\n        if (mel.hasOwnProperty(buildingId) && Array.isArray(mel[buildingId])) {\n          mel_merge = mel_merge.concat(mel[buildingId]);\n        }\n      }\n      if (mel_merge && Array.isArray(mel_merge)) {\n        for (const mel_item in mel_merge) {\n          var _mel_merge$mel_item;\n          let attributes = (_mel_merge$mel_item = mel_merge[mel_item]) === null || _mel_merge$mel_item === void 0 ? void 0 : _mel_merge$mel_item.attributes;\n          let property_use_type = attributes === null || attributes === void 0 ? void 0 : attributes.property_use_type;\n          if (property_use_type && typeof attributes == 'object') {\n            let questions = [];\n            let selected_id = false;\n            if (list_mapped_use_types && Array.isArray(list_mapped_use_types)) {\n              for (const mapped_item in list_mapped_use_types) {\n                var _list_mapped_use_type, _list_mapped_use_type2;\n                if (selected_id) break;\n                const mapped_item_id = (_list_mapped_use_type = list_mapped_use_types[mapped_item]) === null || _list_mapped_use_type === void 0 ? void 0 : _list_mapped_use_type.id;\n                const mapped_item_label = (_list_mapped_use_type2 = list_mapped_use_types[mapped_item]) === null || _list_mapped_use_type2 === void 0 ? void 0 : _list_mapped_use_type2.label;\n                if (property_use_type === mapped_item_label && mapped_item_id) {\n                  for (const map_item in MAPPING_JSON_FILE) {\n                    // if (list_mapped_use_types.length > 0) break\n                    let result = await loadJsonData(MAPPING_JSON_FILE[map_item]);\n                    let items = result.items;\n                    let list_usetypes = [];\n                    if (items && Array.isArray(items)) {\n                      for (const key in items) {\n                        var _item$options, _item$options2;\n                        const item = items[key];\n                        const options_condition = item === null || item === void 0 ? void 0 : (_item$options = item.options) === null || _item$options === void 0 ? void 0 : _item$options.condition;\n                        const options_values = item === null || item === void 0 ? void 0 : (_item$options2 = item.options) === null || _item$options2 === void 0 ? void 0 : _item$options2.values;\n                        if (options_condition === 'is_selected' && Array.isArray(options_values)) {\n                          if (options_values.includes(mapped_item_id)) {\n                            selected_id = item === null || item === void 0 ? void 0 : item.id;\n                            break;\n                          }\n                        }\n                      }\n                    }\n                    if (selected_id) break;\n                  }\n                }\n              }\n            }\n            if (selected_id) {\n              for (const map_item in MAPPING_JSON_FILE) {\n                // if (list_mapped_use_types.length > 0) break\n                let result = await loadJsonData(MAPPING_JSON_FILE[map_item]);\n                let items = result.items;\n                if (items && Array.isArray(items)) {\n                  for (const key in items) {\n                    const item = items[key];\n                    const parent_id = item === null || item === void 0 ? void 0 : item.parent_id;\n                    if (parent_id === selected_id) {\n                      questions.push(item);\n                    }\n                  }\n                }\n                if (questions) {\n                  break;\n                }\n              }\n            }\n            if (questions) {\n              usetypes[property_use_type] = questions;\n            }\n          }\n        }\n      }\n      if (usetypes && Array.isArray(usetypes)) {\n        setUseTypes(usetypes);\n\n        // TODO: Add cache\n        let string_parse = '';\n        let key = 0;\n        for (const usetypes_item in usetypes) {\n          key += 1;\n          let value_str_parse = JSON.stringify(usetypes[usetypes_item]);\n          if (key === 1) {\n            string_parse = `\"${usetypes_item}\":${value_str_parse}`;\n          } else {\n            string_parse = `${string_parse},\"${usetypes_item}\":${value_str_parse}`;\n          }\n        }\n        let cache_str = '{' + string_parse + '}';\n        localStorage.setItem('usetypes_cache', cache_str);\n        document.getElementById(\"usetypes\").removeAttribute('disabled');\n        let elements = document.getElementsByClassName('spinner');\n        while (elements.length > 0) {\n          elements[0].parentNode.removeChild(elements[0]);\n        }\n      }\n    }\n    loadPropertyUseTypes();\n  }, []);\n  async function getDataJson() {\n    const response = await fetch(JSON_FILE, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    const json = await response.json();\n    return json;\n  }\n  async function loadJsonData(file) {\n    const response = await fetch(file, {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      }\n    });\n    const json = await response.json();\n    return json;\n  }\n  function getPlainObjectFromFormElement(form) {\n    const elements = form.elements;\n    return Object.keys(elements).reduce((obj, field) => {\n      if (isNaN(field)) {\n        obj[field] = elements[field].value;\n      }\n      return obj;\n    }, {});\n  }\n  function changeTabPropertyInfo(event) {\n    event.preventDefault();\n    setTabType('property_info');\n  }\n  function changeTabUtilityData(event) {\n    event.preventDefault();\n    setTabType('utility_data');\n  }\n  function selectPropertyDetails(event) {\n    return false;\n    const is_checked = event.target.checked === true;\n    switch (event.target.name) {\n      case \"property_details_property_includes_parking_areas\":\n        setPropertyIncludesParkingAreas(is_checked);\n        break;\n      case \"property_details_property_has_a_heated_swimming_pool\":\n        setPropertyHasAHeatedSwimmingPool(is_checked);\n        break;\n      case \"property_details_property_details_property_has_1_or_more_retail_stores\":\n        setPropertyHas1OrMoreRetailStoresGreater5000(is_checked);\n        break;\n      case \"property_has_one_or_more_restaurants\":\n        setPropertyHasOneOrMoreRestaurantsCafeterias(is_checked);\n        break;\n      case \"property_details_property_has_nursing\":\n        setPropertyHasNursingAssistedCareFacilities(is_checked);\n        break;\n    }\n  }\n  function getBase64(file) {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(file);\n      reader.onload = () => {\n        resolve(reader.result);\n      };\n      reader.onerror = reject;\n    });\n  }\n  async function submitForm(form_data) {\n    const url = WEBHOOK_URL;\n    try {\n      const response = await fetch(url, {\n        method: \"POST\",\n        body: JSON.stringify(form_data)\n      });\n      if (!response.ok) {\n        throw new Error(`Response status: ${response.status}`);\n      }\n      const json = await response.json();\n      if (json.success == true) {\n        alert(`Submit successfully! Plesae review in ${WEBHOOK_URL}`);\n      }\n    } catch (error) {\n      console.error(error.message);\n    }\n    alert(`Submit successfully! Plesae review in ${WEBHOOK_URL}`);\n  }\n  function createUseType(event) {\n    event.preventDefault();\n    const selected_use_type = document.getElementById('usetypes');\n    let selected_use_type_value = selected_use_type === null || selected_use_type === void 0 ? void 0 : selected_use_type.value;\n    if (!selected_use_type_value) {\n      alert(\"Plase select an Use Type.\");\n      return false;\n    }\n    let selected_usetype_questions = useTypes[selected_use_type_value];\n    if (selected_usetype_questions && Array.isArray(selected_usetype_questions)) {\n      if (useTypesCreated.includes(selected_use_type_value)) {\n        alert('This Use Type has already been created, please choose another Use Type');\n        return false;\n      }\n      let question_html = ``;\n      let usetype_html = ``;\n      for (const question in selected_usetype_questions) {\n        const label = selected_usetype_questions[question]['label'];\n        const type = selected_usetype_questions[question]['type'];\n        let field_html = '';\n        if (type == 'numeric') {\n          field_html = `<input name='usetype_${selected_use_type_value}_${label}' type=\"number\" placeholder=\"Enter Value\" class=\"w-full border border-solid border-[#DADADB] rounded-[8px] py-[5px] md:py-[8px] px-[12px] md:px-[15px] mt-[5px] text-[12px] md:text-[16px] leading-[15px] md:leading-[20px]\" />`;\n        } else if (type == 'list') {\n          var _selected_usetype_que, _selected_usetype_que2, _selected_usetype_que3;\n          let options = (_selected_usetype_que = selected_usetype_questions[question]) === null || _selected_usetype_que === void 0 ? void 0 : (_selected_usetype_que2 = _selected_usetype_que.options) === null || _selected_usetype_que2 === void 0 ? void 0 : (_selected_usetype_que3 = _selected_usetype_que2.response_set) === null || _selected_usetype_que3 === void 0 ? void 0 : _selected_usetype_que3.responses;\n          let option_html = ``;\n          if (options && Array.isArray(options)) {\n            for (const option in options) {\n              var _options$option;\n              option_html = `\n                                ${option_html}\n                                <option>${(_options$option = options[option]) === null || _options$option === void 0 ? void 0 : _options$option.label}</options>\n                            `;\n            }\n          }\n          field_html = `\n                    <select name='usetype_${selected_use_type_value}_${label}' class=\"w-full border border-solid border-[#DADADB] rounded-[8px] py-[5px] md:py-[8px] px-[12px] md:px-[15px] mt-[5px] text-[12px] md:text-[16px] leading-[15px] md:leading-[20px]\">\n                        ${option_html}\n                    </select>\n                    `;\n        } else {\n          field_html = `<input name='usetype_${selected_use_type_value}_${label}' type=\"text\" placeholder=\"Enter Value\" class=\"w-full border border-solid border-[#DADADB] rounded-[8px] py-[5px] md:py-[8px] px-[12px] md:px-[15px] mt-[5px] text-[12px] md:text-[16px] leading-[15px] md:leading-[20px]\" />`;\n        }\n        question_html = `\n                    ${question_html}\n                    <div class=\"w-full lg:w-[calc(100%_/_3)] mb-[12px] md:mb-[20px] px-[5px]\">\n                        <label class=\"text-grey font-semibold\" for=\"\">${label}</label>\n                        ${field_html}\n                    </div>\n                `;\n      }\n      if (question_html) {\n        usetype_html = `\n                <div class=\"block-collapse-wrap mb-[20px] md:mb-[40px]\">\n                    <h3 class=\"text-[16px] md:text-[20px] leading-[20px] md:leading-[24px] font-semibold mb-[10px] md:mb-[20px]\">\n                        <div class=\"collapse-title inline-flex cursor-pointer\">\n                            <span>${selected_use_type_value}</span>\n                            <img class=\"ml-[10px]\" src=\"./images/common/chevron.down.svg\" alt=\"\" />\n\n                            <a data-usetype=\"${selected_use_type_value}\" class=\"cursor-pointer ml-[10px] btn-remove-usetype text-[10px] md:text-[12px] leading-[12px] md:leading-[15px] font-semibold bg-greywhite rounded-[10px] p-[10px] md:py-[10px] md:px-[12px] whitespace-nowrap items-center\">\n                                <img src=\"./images/common/remove-grey.svg\" alt=\"\" />\n                            </a>\n                        </div>\n                    </h3>\n\n                    <div class=\"block-collapsed flex flex-wrap mx-[-5px]\">\n                        ${question_html}\n                    </div>\n                </div>\n            `;\n      }\n      const usetype_created = document.getElementById('usetype_created');\n      if (usetype_created && usetype_html) {\n        usetype_created.insertAdjacentHTML('beforeend', usetype_html);\n        useTypesCreated.push(selected_use_type_value);\n        setUseTypesCreated(useTypesCreated);\n        selected_use_type.value = \"\";\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"containerX content-wrap flex-1 py-[16px] md:py-[32px]\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"questionaire-form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 634,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 633,\n    columnNumber: 9\n  }, this);\n}\n_s(FormPage, \"hu+c/MDr3luTR/X40DhqyNrR6xA=\");\n_c = FormPage;\nexport default FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","FormPage","_s","tabType","setTabType","contactBlockId","setContactBlockId","contactBlockIdRef","propertyIncludesParkingAreas","setPropertyIncludesParkingAreas","propertyHasAHeatedSwimmingPool","setPropertyHasAHeatedSwimmingPool","propertyHas1OrMoreRetailStoresGreater5000","setPropertyHas1OrMoreRetailStoresGreater5000","propertyHasOneOrMoreRestaurantsCafeterias","setPropertyHasOneOrMoreRestaurantsCafeterias","propertyHasNursingAssistedCareFacilities","setPropertyHasNursingAssistedCareFacilities","jsonData","setJsonData","useTypes","setUseTypes","useTypesCreated","setUseTypesCreated","jsonDataRef","WEBHOOK_URL","JSON_FILE","MAPPING_JSON_FILE","current","document","addEventListener","event","el","target","is_el","classList","contains","closest","snapp_slide","snap_scroller","querySelector","snap_item_size","clientWidth","scrollToNextPage","scrollToPrevPage","scrollBy","remove","add","snap_scrollers","querySelectorAll","key","e","scrollLeft","offsetWidth","scrollWidth","parent","toggle","forEach","element","parentElement","tr_parent","table_parent","data_child","getAttribute","child","insertAfter","newNode","existingNode","parentNode","insertBefore","nextSibling","preventDefault","parent_clone","cloneNode","parent_id","contact_form_frap","incr","setAttribute","input","value","name","replace","is_remove_contact_btn","length","getElementById","handleClick","form_data","Object","fromEntries","FormData","file","months_in_use_image","getBase64","submitForm","is_remove_usetype_btn","selected_usetype","index","indexOf","splice","loadPropertyUseTypes","params","_result$Body","_result$Body$payload","usetypes_cache","localStorage","getItem","usetypes","JSON","parse","removeAttribute","elements","getElementsByClassName","removeChild","list_mapped_use_types","map_item","result","loadJsonData","items","list_usetypes","Array","isArray","item","mapping_id","getDataJson","mel","Body","payload","mel_merge","buildingId","hasOwnProperty","concat","mel_item","_mel_merge$mel_item","attributes","property_use_type","questions","selected_id","mapped_item","_list_mapped_use_type","_list_mapped_use_type2","mapped_item_id","id","mapped_item_label","label","_item$options","_item$options2","options_condition","options","condition","options_values","values","includes","push","string_parse","usetypes_item","value_str_parse","stringify","cache_str","setItem","response","fetch","headers","json","getPlainObjectFromFormElement","form","keys","reduce","obj","field","isNaN","changeTabPropertyInfo","changeTabUtilityData","selectPropertyDetails","is_checked","checked","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","url","method","body","ok","Error","status","success","alert","error","console","message","createUseType","selected_use_type","selected_use_type_value","selected_usetype_questions","question_html","usetype_html","question","type","field_html","_selected_usetype_que","_selected_usetype_que2","_selected_usetype_que3","response_set","responses","option_html","option","_options$option","usetype_created","insertAdjacentHTML","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/suoinguyen/Working/ba-dashboard-static/pre_visit_react/src/components/FormPage.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\n\nfunction FormPage() {\n    const [tabType, setTabType] = useState(\"property_info\")\n    const [contactBlockId, setContactBlockId] = useState(0)\n    const contactBlockIdRef = useRef(contactBlockId);\n    const [propertyIncludesParkingAreas, setPropertyIncludesParkingAreas] = useState(false)\n    const [propertyHasAHeatedSwimmingPool, setPropertyHasAHeatedSwimmingPool] = useState(false)\n    const [propertyHas1OrMoreRetailStoresGreater5000, setPropertyHas1OrMoreRetailStoresGreater5000] = useState(false)\n    const [propertyHasOneOrMoreRestaurantsCafeterias, setPropertyHasOneOrMoreRestaurantsCafeterias] = useState(false)\n    const [propertyHasNursingAssistedCareFacilities, setPropertyHasNursingAssistedCareFacilities] = useState(false)\n    const [jsonData, setJsonData] = useState([])\n    const [useTypes, setUseTypes] = useState([])\n    const [useTypesCreated, setUseTypesCreated] = useState([])\n    const jsonDataRef = useRef(jsonData);\n    const WEBHOOK_URL = 'https://webhook.site/e3dbb649-e1f3-4743-9fe7-dbc069681dc4'\n    const JSON_FILE = './json/data.json'\n    const MAPPING_JSON_FILE = [\n        './json/mapping_1.json',\n        './json/mapping_2.json',\n        './json/mapping_3.json',\n        './json/mapping_4.json',\n    ]\n\n    useEffect(() => {\n        contactBlockIdRef.current = contactBlockId;\n        jsonDataRef.current = jsonData;\n\n    }, [contactBlockId, jsonData]);\n\n    useEffect( () => {\n        document.addEventListener('click', function (event) {\n            let el = event.target;\n            let is_el = el.classList.contains('snap-next') || el.classList.contains('snap-prev');\n\n            if (!is_el) {\n                el = event.target.closest('.snap-next') || event.target.closest('.snap-prev');\n                if (el) {\n                    is_el = true;\n                }\n            }\n\n            if (is_el) {\n                const snapp_slide = el.closest('.snap-slide')\n                const snap_scroller = snapp_slide.querySelector('.snap-scroller');\n                const snap_item_size = snap_scroller.querySelector('div').clientWidth;\n\n                if (el.classList.contains('snap-next')) {\n                    scrollToNextPage();\n                }\n\n                if (el.classList.contains('snap-prev')) {\n                    scrollToPrevPage();\n                }\n\n                function scrollToNextPage() {\n                    snap_scroller.scrollBy(snap_item_size, 0);\n                    snapp_slide.querySelector('.snap-prev').classList.remove(\"hidden\")\n                    snapp_slide.querySelector('.snap-prev').classList.add(\"active\")\n                }\n                function scrollToPrevPage() {\n                    snap_scroller.scrollBy(-snap_item_size, 0);\n                    snapp_slide.querySelector('.snap-next').classList.remove(\"hidden\")\n                    snapp_slide.querySelector('.snap-next').classList.add(\"active\")\n                }\n            }\n        })\n\n        const snap_scrollers = document.querySelectorAll('.snap-scroller')\n        for (const key in snap_scrollers) {\n            if (!snap_scrollers[key] || typeof snap_scrollers[key] !== 'object') {\n                continue;\n            }\n\n            snap_scrollers[key].addEventListener('scroll', function (e) {\n                const snapp_slide = e.target.closest('.snap-slide')\n                if (e.target.scrollLeft % e.target.offsetWidth === 0) {\n                    snapp_slide.querySelector('.snap-prev').classList.add(\"hidden\")\n                    snapp_slide.querySelector('.snap-prev').classList.remove(\"active\")\n                } else {\n                    snapp_slide.querySelector('.snap-prev').classList.remove(\"hidden\")\n                    snapp_slide.querySelector('.snap-prev').classList.add(\"active\")\n                }\n\n                let scrollWidth = document.querySelector('.snap-scroller').scrollWidth\n                if (scrollWidth === (e.target.scrollLeft + e.target.offsetWidth)) {\n                    snapp_slide.querySelector('.snap-next').classList.add(\"hidden\")\n                    snapp_slide.querySelector('.snap-next').classList.remove(\"active\")\n                } else {\n                    snapp_slide.querySelector('.snap-next').classList.remove(\"hidden\")\n                    snapp_slide.querySelector('.snap-next').classList.add(\"active\")\n                }\n            });\n        }\n\n        //Collapse block\n        document.addEventListener('click', function (event) {\n            let el = event.target\n            let is_el = el.classList.contains('.collapse-title');\n\n            if (!is_el) {\n                el = event.target.closest('.collapse-title');\n                if (el) {\n                    is_el = true;\n                }\n            }\n\n            if (is_el) {\n                const parent = el.closest('.block-collapse-wrap')\n                el.querySelector('img').classList.toggle('rotate-180')\n\n                parent.querySelectorAll('.block-collapsed').forEach(element => {\n                    element.classList.toggle('hidden')\n                });\n            }\n        })\n\n        document.addEventListener('click', function (event) {\n            let el = event.target\n            let is_el = el.classList.contains('.header-collapse');\n\n            if (!is_el) {\n                el = event.target.closest('.header-collapse');\n                if (el) {\n                    is_el = true;\n                }\n            }\n\n            if (is_el) {\n                const parent = el.parentElement\n                el.querySelector('svg').classList.toggle('rotate-180')\n\n                parent.querySelectorAll('.body-collapse').forEach(element => {\n                    element.classList.toggle('hidden')\n                });\n            }\n        })\n\n        // Table toggle child\n        document.addEventListener('click', function (event) {\n\n            let el = event.target\n            let is_el = el.classList.contains('.toggle-child');\n\n            if (!is_el) {\n                el = event.target.closest('.toggle-child');\n                if (el) {\n                    is_el = true;\n                }\n            }\n\n            if (is_el) {\n                const tr_parent = el.closest('tr.has-child');\n                const table_parent = el.closest('table');\n                let data_child = tr_parent.getAttribute(\"data-child\");\n\n                const child = table_parent.querySelector('tr.child[data-child=\"' + data_child + '\"]');\n                child.classList.toggle('hidden');\n            }\n        })\n\n        // Func\n        function insertAfter(newNode, existingNode) {\n            existingNode.parentNode.insertBefore(newNode, existingNode.nextSibling);\n        }\n\n        //Add contact\n        document.addEventListener('click', function (event) {\n\n            let el = event.target\n            let is_el = el.classList.contains('.btn-add-contact');\n\n            if (!is_el) {\n                el = event.target.closest('.btn-add-contact');\n                if (el) {\n                    is_el = true;\n                }\n            }\n\n            if (is_el) {\n                event.preventDefault();\n                const parent = el.closest('.contact-form-wrap')\n                let parent_clone = parent.cloneNode(true)\n                let parent_id = parent_clone.getAttribute('data-id')\n\n                const contact_form_frap = document.querySelectorAll('.contact-form-wrap');\n                contact_form_frap.forEach(function (element) {\n                    element.querySelector('.btn-remove-contact').classList.remove('hidden')\n                    element.querySelector('.btn-add-contact').classList.add('hidden')\n                });\n\n                //Reset all field before\n                let incr = contactBlockIdRef.current + 1\n                setContactBlockId(incr)\n                parent_clone.setAttribute('data-id', incr)\n                parent_clone.querySelectorAll('input, select, textarea').forEach(function (input) {\n                    input.value = ''\n                    input.name = input.name.replace(`contact[${parent_id}]`, `contact[${incr}]`)\n                })\n\n                parent_clone.querySelector('.btn-remove-contact').classList.remove('hidden')\n                parent_clone.querySelector('.btn-add-contact').classList.remove('hidden')\n\n                insertAfter(parent_clone, parent)\n            }\n        })\n\n        //Delete contact\n        document.addEventListener('click', function (event) {\n\n            let el = event.target\n            let is_remove_contact_btn = el.classList.contains('.btn-remove-contact');\n\n            if (!is_remove_contact_btn) {\n                el = event.target.closest('.btn-remove-contact');\n                if (el) {\n                    is_remove_contact_btn = true;\n                }\n            }\n\n            if (is_remove_contact_btn) {\n                event.preventDefault();\n                const parent = el.closest('.contact-form-wrap')\n                const parent_clone = parent.cloneNode(true)\n\n                const contact_form_frap = document.querySelectorAll('.contact-form-wrap');\n\n                //Remove\n                if (contact_form_frap.length > 1) {\n                    parent.remove()\n                }\n\n                if (contact_form_frap.length == 2) {\n                    contact_form_frap.forEach(function (element) {\n                        element.querySelector('.btn-remove-contact').classList.remove('hidden')\n                        element.querySelector('.btn-add-contact').classList.remove('hidden')\n                    });\n                }\n            }\n        })\n\n        document.getElementById('questionaire-form').addEventListener('submit', async function handleClick(event) {\n            event.preventDefault()\n\n            const form_data = Object.fromEntries(new FormData(event.target))\n            let file = form_data.months_in_use_image\n\n            if (file){\n                form_data.months_in_use_image = await getBase64(file) \n\n                submitForm(form_data)\n            }\n            \n        })\n\n        //Delete UseType\n        document.addEventListener('click', function (event) {\n            let el = event.target\n            let is_remove_usetype_btn = el.classList.contains('.btn-remove-usetype');\n\n            if (!is_remove_usetype_btn) {\n                el = event.target.closest('.btn-remove-usetype');\n                if (el) {\n                    is_remove_usetype_btn = true;\n                }\n            }\n\n            if (is_remove_usetype_btn) {\n                event.preventDefault()\n                const parent = el.closest('.block-collapse-wrap')\n\n                //Remove\n                if (parent) {\n                    parent.remove()\n                    \n                    const selected_usetype = el.getAttribute('data-usetype')\n                    if (selected_usetype){\n                        \n                        const index = useTypesCreated.indexOf(selected_usetype);\n                        if (index > -1) {\n                            useTypesCreated.splice(index, 1);\n                        }\n                    }\n\n                }\n\n            }\n        })\n\n        async function loadPropertyUseTypes(params) {\n            let usetypes_cache = localStorage.getItem('usetypes_cache')\n            if (usetypes_cache){\n                let usetypes = JSON.parse(usetypes_cache)\n                setUseTypes(usetypes)\n                document.getElementById(\"usetypes\").removeAttribute('disabled')\n                let elements = document.getElementsByClassName('spinner');\n                while(elements.length > 0) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n                return    \n            }\n\n\n            let list_mapped_use_types = []\n            for (const map_item in MAPPING_JSON_FILE){\n                if (list_mapped_use_types.length > 0) break\n                let result = await loadJsonData(MAPPING_JSON_FILE[map_item])\n                let items = result.items\n                let list_usetypes = []\n                if (items && Array.isArray(items)){\n                    for (const key in items){\n                        const item = items[key]\n\n                        const mapping_id = item['mapping_id']\n                        if (mapping_id === 'property_use_type'){\n                            list_usetypes = item['options']['response_set']['responses']\n                            list_mapped_use_types = list_usetypes\n                            break\n                        }\n                    }\n                }\n            }\n            const result = await getDataJson()\n            let mel = result?.Body?.payload?.mel\n            let mel_merge = []\n            let usetypes = []\n            for (const buildingId in mel) {\n                if (mel.hasOwnProperty(buildingId) && Array.isArray(mel[buildingId])) {\n                    mel_merge = mel_merge.concat(mel[buildingId])\n                }\n            }\n\n            if (mel_merge && Array.isArray(mel_merge)){\n                for (const mel_item in mel_merge){\n                    let attributes = mel_merge[mel_item]?.attributes\n                    let property_use_type = attributes?.property_use_type\n                    if (property_use_type && typeof attributes == 'object'){\n                        let questions = []\n                        let selected_id = false\n\n                        if (list_mapped_use_types && Array.isArray(list_mapped_use_types)){\n                            for (const mapped_item in list_mapped_use_types){\n                                if (selected_id) break\n\n                                const mapped_item_id = list_mapped_use_types[mapped_item]?.id\n                                const mapped_item_label = list_mapped_use_types[mapped_item]?.label\n                                if (property_use_type === mapped_item_label && mapped_item_id){\n                                    for (const map_item in MAPPING_JSON_FILE){\n                                        // if (list_mapped_use_types.length > 0) break\n                                        let result = await loadJsonData(MAPPING_JSON_FILE[map_item])\n                                        let items = result.items\n                                        let list_usetypes = []\n                                        if (items && Array.isArray(items)){\n                                            for (const key in items){\n                                                const item = items[key]\n                                                const options_condition = item?.options?.condition\n                                                const options_values = item?.options?.values\n                                                \n                                                if (options_condition === 'is_selected' && Array.isArray(options_values)){\n                                                    if (options_values.includes(mapped_item_id)){\n                                                        selected_id = item?.id\n                                                        break\n                                                    }\n                                                }\n                                            }\n                                        }\n\n                                        if (selected_id) break\n                                    }\n                                }\n                            }\n                        }\n\n                        if (selected_id){\n                            for (const map_item in MAPPING_JSON_FILE){\n                                // if (list_mapped_use_types.length > 0) break\n                                let result = await loadJsonData(MAPPING_JSON_FILE[map_item])\n                                let items = result.items\n                                if (items && Array.isArray(items)){\n                                    for (const key in items){\n                                        const item = items[key]\n                                        const parent_id = item?.parent_id\n                                        if (parent_id === selected_id){\n                                            questions.push(item)\n                                        }\n                                    }\n                                }\n\n                                if (questions) {\n                                    break\n                                }\n                            }\n                        }\n\n                        if (questions){\n                            usetypes[property_use_type] = questions \n                        }\n                    }\n                }\n            }\n\n            if (usetypes && Array.isArray(usetypes)){\n                setUseTypes(usetypes)\n\n                // TODO: Add cache\n                let string_parse = ''\n                let key = 0\n                for (const usetypes_item in usetypes){\n                    key += 1\n                    let value_str_parse = JSON.stringify(usetypes[usetypes_item])\n                    if (key === 1){\n                        string_parse = `\"${usetypes_item}\":${value_str_parse}`\n                    }else{\n                        string_parse = `${string_parse},\"${usetypes_item}\":${value_str_parse}`\n                    }\n                }\n\n                let cache_str = '{'+string_parse+'}'\n                localStorage.setItem('usetypes_cache', cache_str)\n\n                document.getElementById(\"usetypes\").removeAttribute('disabled')\n                let elements = document.getElementsByClassName('spinner');\n                while(elements.length > 0) {\n                    elements[0].parentNode.removeChild(elements[0]);\n                }\n            }\n        }\n\n        loadPropertyUseTypes()\n    }, [])\n\n    async function getDataJson (){\n        const response = await fetch(\n            JSON_FILE,\n            {\n                headers : { \n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            })\n        const json = await response.json();\n\n        return json\n    }\n\n    async function loadJsonData (file){\n        const response = await fetch(\n            file,\n            {\n                headers : { \n                    'Content-Type': 'application/json',\n                    'Accept': 'application/json'\n                }\n            })\n        const json = await response.json();\n\n        return json\n    }\n\n    function getPlainObjectFromFormElement(form) {\n        const elements = form.elements;\n        return Object.keys(elements)\n            .reduce((obj, field) => {\n                if (isNaN(field)) {\n                    obj[field] = elements[field].value;\n                }\n                return obj;\n            }, {});\n    }\n\n    function changeTabPropertyInfo(event) {\n        event.preventDefault()\n        setTabType('property_info')\n    }\n\n    function changeTabUtilityData(event) {\n        event.preventDefault()\n\n        setTabType('utility_data')\n    }\n\n    function selectPropertyDetails(event) {\n\n        return false\n        const is_checked = event.target.checked === true\n        \n        switch (event.target.name){\n            case \"property_details_property_includes_parking_areas\":\n                setPropertyIncludesParkingAreas(is_checked)\n                break\n            case \"property_details_property_has_a_heated_swimming_pool\":\n                setPropertyHasAHeatedSwimmingPool(is_checked)\n                break    \n            case \"property_details_property_details_property_has_1_or_more_retail_stores\":\n                setPropertyHas1OrMoreRetailStoresGreater5000(is_checked)\n                break       \n            case \"property_has_one_or_more_restaurants\":\n                setPropertyHasOneOrMoreRestaurantsCafeterias(is_checked)\n                break       \n            case \"property_details_property_has_nursing\":\n                setPropertyHasNursingAssistedCareFacilities(is_checked)\n                break     \n        }\n    }\n\n    function getBase64(file) {\n        return new Promise((resolve, reject) => {\n          const reader = new FileReader()\n          reader.readAsDataURL(file)\n          reader.onload = () => {\n            resolve(reader.result)\n          }\n          reader.onerror = reject\n        })\n    }\n    \n    async function submitForm(form_data) {\n        const url = WEBHOOK_URL;\n        try {\n          const response = await fetch(url, {\n            method: \"POST\",\n            body: JSON.stringify(form_data)\n          });\n\n          if (!response.ok) {\n            throw new Error(`Response status: ${response.status}`);\n          }\n      \n          const json = await response.json();\n\n          if (json.success == true){\n            alert(`Submit successfully! Plesae review in ${WEBHOOK_URL}`)\n          }\n        } catch (error) {\n          console.error(error.message);\n        }\n        alert(`Submit successfully! Plesae review in ${WEBHOOK_URL}`)\n      }\n\n    function createUseType(event) {\n        event.preventDefault()\n        \n        const selected_use_type = document.getElementById('usetypes')\n        let selected_use_type_value = selected_use_type?.value\n\n        if (!selected_use_type_value){\n            alert(\"Plase select an Use Type.\")\n            return false\n        }\n        let selected_usetype_questions = useTypes[selected_use_type_value]\n\n\n        if (selected_usetype_questions && Array.isArray(selected_usetype_questions)){\n            if (useTypesCreated.includes(selected_use_type_value)){\n                alert('This Use Type has already been created, please choose another Use Type')\n                return false\n            }\n            \n            let question_html = ``\n            let usetype_html = ``\n            for (const question in selected_usetype_questions){\n                const label = selected_usetype_questions[question]['label']\n                const type = selected_usetype_questions[question]['type']\n                let field_html = ''\n                if (type == 'numeric'){\n                    field_html = `<input name='usetype_${selected_use_type_value}_${label}' type=\"number\" placeholder=\"Enter Value\" class=\"w-full border border-solid border-[#DADADB] rounded-[8px] py-[5px] md:py-[8px] px-[12px] md:px-[15px] mt-[5px] text-[12px] md:text-[16px] leading-[15px] md:leading-[20px]\" />`\n                }else if (type == 'list'){\n                    let options = selected_usetype_questions[question]?.options?.response_set?.responses\n                    let option_html = ``\n                    if (options && Array.isArray(options)){\n                        for (const option in options){\n                            option_html = `\n                                ${option_html}\n                                <option>${options[option]?.label}</options>\n                            `\n                        }\n                    }\n                    field_html = `\n                    <select name='usetype_${selected_use_type_value}_${label}' class=\"w-full border border-solid border-[#DADADB] rounded-[8px] py-[5px] md:py-[8px] px-[12px] md:px-[15px] mt-[5px] text-[12px] md:text-[16px] leading-[15px] md:leading-[20px]\">\n                        ${option_html}\n                    </select>\n                    `\n                }else{\n                    field_html = `<input name='usetype_${selected_use_type_value}_${label}' type=\"text\" placeholder=\"Enter Value\" class=\"w-full border border-solid border-[#DADADB] rounded-[8px] py-[5px] md:py-[8px] px-[12px] md:px-[15px] mt-[5px] text-[12px] md:text-[16px] leading-[15px] md:leading-[20px]\" />`\n                }\n                question_html = `\n                    ${question_html}\n                    <div class=\"w-full lg:w-[calc(100%_/_3)] mb-[12px] md:mb-[20px] px-[5px]\">\n                        <label class=\"text-grey font-semibold\" for=\"\">${label}</label>\n                        ${field_html}\n                    </div>\n                `\n            }\n\n            if (question_html){\n                usetype_html = `\n                <div class=\"block-collapse-wrap mb-[20px] md:mb-[40px]\">\n                    <h3 class=\"text-[16px] md:text-[20px] leading-[20px] md:leading-[24px] font-semibold mb-[10px] md:mb-[20px]\">\n                        <div class=\"collapse-title inline-flex cursor-pointer\">\n                            <span>${selected_use_type_value}</span>\n                            <img class=\"ml-[10px]\" src=\"./images/common/chevron.down.svg\" alt=\"\" />\n\n                            <a data-usetype=\"${selected_use_type_value}\" class=\"cursor-pointer ml-[10px] btn-remove-usetype text-[10px] md:text-[12px] leading-[12px] md:leading-[15px] font-semibold bg-greywhite rounded-[10px] p-[10px] md:py-[10px] md:px-[12px] whitespace-nowrap items-center\">\n                                <img src=\"./images/common/remove-grey.svg\" alt=\"\" />\n                            </a>\n                        </div>\n                    </h3>\n\n                    <div class=\"block-collapsed flex flex-wrap mx-[-5px]\">\n                        ${question_html}\n                    </div>\n                </div>\n            `\n            }\n            \n\n            const usetype_created = document.getElementById('usetype_created')\n            if (usetype_created && usetype_html){\n                usetype_created.insertAdjacentHTML(\n                    'beforeend', \n                    usetype_html\n                );\n\n                useTypesCreated.push(selected_use_type_value)\n                setUseTypesCreated(useTypesCreated)\n\n                selected_use_type.value = \"\"\n            }\n        }\n    }\n\n    return (\n        <div className=\"containerX content-wrap flex-1 py-[16px] md:py-[32px]\">\n            <form id='questionaire-form'>\n                \n            </form>\n        </div>\n    );\n}\n\nexport default FormPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE3D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAChB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,eAAe,CAAC;EACvD,MAAM,CAACQ,cAAc,EAAEC,iBAAiB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EACvD,MAAMU,iBAAiB,GAAGT,MAAM,CAACO,cAAc,CAAC;EAChD,MAAM,CAACG,4BAA4B,EAAEC,+BAA+B,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EACvF,MAAM,CAACa,8BAA8B,EAAEC,iCAAiC,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC3F,MAAM,CAACe,yCAAyC,EAAEC,4CAA4C,CAAC,GAAGhB,QAAQ,CAAC,KAAK,CAAC;EACjH,MAAM,CAACiB,yCAAyC,EAAEC,4CAA4C,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EACjH,MAAM,CAACmB,wCAAwC,EAAEC,2CAA2C,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC/G,MAAM,CAACqB,QAAQ,EAAEC,WAAW,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACuB,QAAQ,EAAEC,WAAW,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACyB,eAAe,EAAEC,kBAAkB,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC;EAC1D,MAAM2B,WAAW,GAAG1B,MAAM,CAACoB,QAAQ,CAAC;EACpC,MAAMO,WAAW,GAAG,2DAA2D;EAC/E,MAAMC,SAAS,GAAG,kBAAkB;EACpC,MAAMC,iBAAiB,GAAG,CACtB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,EACvB,uBAAuB,CAC1B;EAED/B,SAAS,CAAC,MAAM;IACZW,iBAAiB,CAACqB,OAAO,GAAGvB,cAAc;IAC1CmB,WAAW,CAACI,OAAO,GAAGV,QAAQ;EAElC,CAAC,EAAE,CAACb,cAAc,EAAEa,QAAQ,CAAC,CAAC;EAE9BtB,SAAS,CAAE,MAAM;IACbiC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAChD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAIC,KAAK,GAAGF,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,IAAIJ,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC;MAEpF,IAAI,CAACF,KAAK,EAAE;QACRF,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,YAAY,CAAC,IAAIN,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,YAAY,CAAC;QAC7E,IAAIL,EAAE,EAAE;UACJE,KAAK,GAAG,IAAI;QAChB;MACJ;MAEA,IAAIA,KAAK,EAAE;QACP,MAAMI,WAAW,GAAGN,EAAE,CAACK,OAAO,CAAC,aAAa,CAAC;QAC7C,MAAME,aAAa,GAAGD,WAAW,CAACE,aAAa,CAAC,gBAAgB,CAAC;QACjE,MAAMC,cAAc,GAAGF,aAAa,CAACC,aAAa,CAAC,KAAK,CAAC,CAACE,WAAW;QAErE,IAAIV,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UACpCO,gBAAgB,CAAC,CAAC;QACtB;QAEA,IAAIX,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,WAAW,CAAC,EAAE;UACpCQ,gBAAgB,CAAC,CAAC;QACtB;QAEA,SAASD,gBAAgBA,CAAA,EAAG;UACxBJ,aAAa,CAACM,QAAQ,CAACJ,cAAc,EAAE,CAAC,CAAC;UACzCH,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;UAClER,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;QACnE;QACA,SAASH,gBAAgBA,CAAA,EAAG;UACxBL,aAAa,CAACM,QAAQ,CAAC,CAACJ,cAAc,EAAE,CAAC,CAAC;UAC1CH,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;UAClER,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;QACnE;MACJ;IACJ,CAAC,CAAC;IAEF,MAAMC,cAAc,GAAGnB,QAAQ,CAACoB,gBAAgB,CAAC,gBAAgB,CAAC;IAClE,KAAK,MAAMC,GAAG,IAAIF,cAAc,EAAE;MAC9B,IAAI,CAACA,cAAc,CAACE,GAAG,CAAC,IAAI,OAAOF,cAAc,CAACE,GAAG,CAAC,KAAK,QAAQ,EAAE;QACjE;MACJ;MAEAF,cAAc,CAACE,GAAG,CAAC,CAACpB,gBAAgB,CAAC,QAAQ,EAAE,UAAUqB,CAAC,EAAE;QACxD,MAAMb,WAAW,GAAGa,CAAC,CAAClB,MAAM,CAACI,OAAO,CAAC,aAAa,CAAC;QACnD,IAAIc,CAAC,CAAClB,MAAM,CAACmB,UAAU,GAAGD,CAAC,CAAClB,MAAM,CAACoB,WAAW,KAAK,CAAC,EAAE;UAClDf,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;UAC/DT,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;QACtE,CAAC,MAAM;UACHR,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;UAClER,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;QACnE;QAEA,IAAIO,WAAW,GAAGzB,QAAQ,CAACW,aAAa,CAAC,gBAAgB,CAAC,CAACc,WAAW;QACtE,IAAIA,WAAW,KAAMH,CAAC,CAAClB,MAAM,CAACmB,UAAU,GAAGD,CAAC,CAAClB,MAAM,CAACoB,WAAY,EAAE;UAC9Df,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;UAC/DT,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;QACtE,CAAC,MAAM;UACHR,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;UAClER,WAAW,CAACE,aAAa,CAAC,YAAY,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;QACnE;MACJ,CAAC,CAAC;IACN;;IAEA;IACAlB,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAChD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAIC,KAAK,GAAGF,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,iBAAiB,CAAC;MAEpD,IAAI,CAACF,KAAK,EAAE;QACRF,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,iBAAiB,CAAC;QAC5C,IAAIL,EAAE,EAAE;UACJE,KAAK,GAAG,IAAI;QAChB;MACJ;MAEA,IAAIA,KAAK,EAAE;QACP,MAAMqB,MAAM,GAAGvB,EAAE,CAACK,OAAO,CAAC,sBAAsB,CAAC;QACjDL,EAAE,CAACQ,aAAa,CAAC,KAAK,CAAC,CAACL,SAAS,CAACqB,MAAM,CAAC,YAAY,CAAC;QAEtDD,MAAM,CAACN,gBAAgB,CAAC,kBAAkB,CAAC,CAACQ,OAAO,CAACC,OAAO,IAAI;UAC3DA,OAAO,CAACvB,SAAS,CAACqB,MAAM,CAAC,QAAQ,CAAC;QACtC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;IAEF3B,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAChD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAIC,KAAK,GAAGF,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,kBAAkB,CAAC;MAErD,IAAI,CAACF,KAAK,EAAE;QACRF,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,kBAAkB,CAAC;QAC7C,IAAIL,EAAE,EAAE;UACJE,KAAK,GAAG,IAAI;QAChB;MACJ;MAEA,IAAIA,KAAK,EAAE;QACP,MAAMqB,MAAM,GAAGvB,EAAE,CAAC2B,aAAa;QAC/B3B,EAAE,CAACQ,aAAa,CAAC,KAAK,CAAC,CAACL,SAAS,CAACqB,MAAM,CAAC,YAAY,CAAC;QAEtDD,MAAM,CAACN,gBAAgB,CAAC,gBAAgB,CAAC,CAACQ,OAAO,CAACC,OAAO,IAAI;UACzDA,OAAO,CAACvB,SAAS,CAACqB,MAAM,CAAC,QAAQ,CAAC;QACtC,CAAC,CAAC;MACN;IACJ,CAAC,CAAC;;IAEF;IACA3B,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAEhD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAIC,KAAK,GAAGF,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,eAAe,CAAC;MAElD,IAAI,CAACF,KAAK,EAAE;QACRF,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,eAAe,CAAC;QAC1C,IAAIL,EAAE,EAAE;UACJE,KAAK,GAAG,IAAI;QAChB;MACJ;MAEA,IAAIA,KAAK,EAAE;QACP,MAAM0B,SAAS,GAAG5B,EAAE,CAACK,OAAO,CAAC,cAAc,CAAC;QAC5C,MAAMwB,YAAY,GAAG7B,EAAE,CAACK,OAAO,CAAC,OAAO,CAAC;QACxC,IAAIyB,UAAU,GAAGF,SAAS,CAACG,YAAY,CAAC,YAAY,CAAC;QAErD,MAAMC,KAAK,GAAGH,YAAY,CAACrB,aAAa,CAAC,uBAAuB,GAAGsB,UAAU,GAAG,IAAI,CAAC;QACrFE,KAAK,CAAC7B,SAAS,CAACqB,MAAM,CAAC,QAAQ,CAAC;MACpC;IACJ,CAAC,CAAC;;IAEF;IACA,SAASS,WAAWA,CAACC,OAAO,EAAEC,YAAY,EAAE;MACxCA,YAAY,CAACC,UAAU,CAACC,YAAY,CAACH,OAAO,EAAEC,YAAY,CAACG,WAAW,CAAC;IAC3E;;IAEA;IACAzC,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAEhD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAIC,KAAK,GAAGF,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,kBAAkB,CAAC;MAErD,IAAI,CAACF,KAAK,EAAE;QACRF,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,kBAAkB,CAAC;QAC7C,IAAIL,EAAE,EAAE;UACJE,KAAK,GAAG,IAAI;QAChB;MACJ;MAEA,IAAIA,KAAK,EAAE;QACPH,KAAK,CAACwC,cAAc,CAAC,CAAC;QACtB,MAAMhB,MAAM,GAAGvB,EAAE,CAACK,OAAO,CAAC,oBAAoB,CAAC;QAC/C,IAAImC,YAAY,GAAGjB,MAAM,CAACkB,SAAS,CAAC,IAAI,CAAC;QACzC,IAAIC,SAAS,GAAGF,YAAY,CAACT,YAAY,CAAC,SAAS,CAAC;QAEpD,MAAMY,iBAAiB,GAAG9C,QAAQ,CAACoB,gBAAgB,CAAC,oBAAoB,CAAC;QACzE0B,iBAAiB,CAAClB,OAAO,CAAC,UAAUC,OAAO,EAAE;UACzCA,OAAO,CAAClB,aAAa,CAAC,qBAAqB,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;UACvEY,OAAO,CAAClB,aAAa,CAAC,kBAAkB,CAAC,CAACL,SAAS,CAACY,GAAG,CAAC,QAAQ,CAAC;QACrE,CAAC,CAAC;;QAEF;QACA,IAAI6B,IAAI,GAAGrE,iBAAiB,CAACqB,OAAO,GAAG,CAAC;QACxCtB,iBAAiB,CAACsE,IAAI,CAAC;QACvBJ,YAAY,CAACK,YAAY,CAAC,SAAS,EAAED,IAAI,CAAC;QAC1CJ,YAAY,CAACvB,gBAAgB,CAAC,yBAAyB,CAAC,CAACQ,OAAO,CAAC,UAAUqB,KAAK,EAAE;UAC9EA,KAAK,CAACC,KAAK,GAAG,EAAE;UAChBD,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACE,IAAI,CAACC,OAAO,CAAC,WAAWP,SAAS,GAAG,EAAE,WAAWE,IAAI,GAAG,CAAC;QAChF,CAAC,CAAC;QAEFJ,YAAY,CAAChC,aAAa,CAAC,qBAAqB,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;QAC5E0B,YAAY,CAAChC,aAAa,CAAC,kBAAkB,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;QAEzEmB,WAAW,CAACO,YAAY,EAAEjB,MAAM,CAAC;MACrC;IACJ,CAAC,CAAC;;IAEF;IACA1B,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAEhD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAIiD,qBAAqB,GAAGlD,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC;MAExE,IAAI,CAAC8C,qBAAqB,EAAE;QACxBlD,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,qBAAqB,CAAC;QAChD,IAAIL,EAAE,EAAE;UACJkD,qBAAqB,GAAG,IAAI;QAChC;MACJ;MAEA,IAAIA,qBAAqB,EAAE;QACvBnD,KAAK,CAACwC,cAAc,CAAC,CAAC;QACtB,MAAMhB,MAAM,GAAGvB,EAAE,CAACK,OAAO,CAAC,oBAAoB,CAAC;QAC/C,MAAMmC,YAAY,GAAGjB,MAAM,CAACkB,SAAS,CAAC,IAAI,CAAC;QAE3C,MAAME,iBAAiB,GAAG9C,QAAQ,CAACoB,gBAAgB,CAAC,oBAAoB,CAAC;;QAEzE;QACA,IAAI0B,iBAAiB,CAACQ,MAAM,GAAG,CAAC,EAAE;UAC9B5B,MAAM,CAACT,MAAM,CAAC,CAAC;QACnB;QAEA,IAAI6B,iBAAiB,CAACQ,MAAM,IAAI,CAAC,EAAE;UAC/BR,iBAAiB,CAAClB,OAAO,CAAC,UAAUC,OAAO,EAAE;YACzCA,OAAO,CAAClB,aAAa,CAAC,qBAAqB,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;YACvEY,OAAO,CAAClB,aAAa,CAAC,kBAAkB,CAAC,CAACL,SAAS,CAACW,MAAM,CAAC,QAAQ,CAAC;UACxE,CAAC,CAAC;QACN;MACJ;IACJ,CAAC,CAAC;IAEFjB,QAAQ,CAACuD,cAAc,CAAC,mBAAmB,CAAC,CAACtD,gBAAgB,CAAC,QAAQ,EAAE,eAAeuD,WAAWA,CAACtD,KAAK,EAAE;MACtGA,KAAK,CAACwC,cAAc,CAAC,CAAC;MAEtB,MAAMe,SAAS,GAAGC,MAAM,CAACC,WAAW,CAAC,IAAIC,QAAQ,CAAC1D,KAAK,CAACE,MAAM,CAAC,CAAC;MAChE,IAAIyD,IAAI,GAAGJ,SAAS,CAACK,mBAAmB;MAExC,IAAID,IAAI,EAAC;QACLJ,SAAS,CAACK,mBAAmB,GAAG,MAAMC,SAAS,CAACF,IAAI,CAAC;QAErDG,UAAU,CAACP,SAAS,CAAC;MACzB;IAEJ,CAAC,CAAC;;IAEF;IACAzD,QAAQ,CAACC,gBAAgB,CAAC,OAAO,EAAE,UAAUC,KAAK,EAAE;MAChD,IAAIC,EAAE,GAAGD,KAAK,CAACE,MAAM;MACrB,IAAI6D,qBAAqB,GAAG9D,EAAE,CAACG,SAAS,CAACC,QAAQ,CAAC,qBAAqB,CAAC;MAExE,IAAI,CAAC0D,qBAAqB,EAAE;QACxB9D,EAAE,GAAGD,KAAK,CAACE,MAAM,CAACI,OAAO,CAAC,qBAAqB,CAAC;QAChD,IAAIL,EAAE,EAAE;UACJ8D,qBAAqB,GAAG,IAAI;QAChC;MACJ;MAEA,IAAIA,qBAAqB,EAAE;QACvB/D,KAAK,CAACwC,cAAc,CAAC,CAAC;QACtB,MAAMhB,MAAM,GAAGvB,EAAE,CAACK,OAAO,CAAC,sBAAsB,CAAC;;QAEjD;QACA,IAAIkB,MAAM,EAAE;UACRA,MAAM,CAACT,MAAM,CAAC,CAAC;UAEf,MAAMiD,gBAAgB,GAAG/D,EAAE,CAAC+B,YAAY,CAAC,cAAc,CAAC;UACxD,IAAIgC,gBAAgB,EAAC;YAEjB,MAAMC,KAAK,GAAG1E,eAAe,CAAC2E,OAAO,CAACF,gBAAgB,CAAC;YACvD,IAAIC,KAAK,GAAG,CAAC,CAAC,EAAE;cACZ1E,eAAe,CAAC4E,MAAM,CAACF,KAAK,EAAE,CAAC,CAAC;YACpC;UACJ;QAEJ;MAEJ;IACJ,CAAC,CAAC;IAEF,eAAeG,oBAAoBA,CAACC,MAAM,EAAE;MAAA,IAAAC,YAAA,EAAAC,oBAAA;MACxC,IAAIC,cAAc,GAAGC,YAAY,CAACC,OAAO,CAAC,gBAAgB,CAAC;MAC3D,IAAIF,cAAc,EAAC;QACf,IAAIG,QAAQ,GAAGC,IAAI,CAACC,KAAK,CAACL,cAAc,CAAC;QACzClF,WAAW,CAACqF,QAAQ,CAAC;QACrB7E,QAAQ,CAACuD,cAAc,CAAC,UAAU,CAAC,CAACyB,eAAe,CAAC,UAAU,CAAC;QAC/D,IAAIC,QAAQ,GAAGjF,QAAQ,CAACkF,sBAAsB,CAAC,SAAS,CAAC;QACzD,OAAMD,QAAQ,CAAC3B,MAAM,GAAG,CAAC,EAAE;UACvB2B,QAAQ,CAAC,CAAC,CAAC,CAAC1C,UAAU,CAAC4C,WAAW,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnD;QACA;MACJ;MAGA,IAAIG,qBAAqB,GAAG,EAAE;MAC9B,KAAK,MAAMC,QAAQ,IAAIvF,iBAAiB,EAAC;QACrC,IAAIsF,qBAAqB,CAAC9B,MAAM,GAAG,CAAC,EAAE;QACtC,IAAIgC,MAAM,GAAG,MAAMC,YAAY,CAACzF,iBAAiB,CAACuF,QAAQ,CAAC,CAAC;QAC5D,IAAIG,KAAK,GAAGF,MAAM,CAACE,KAAK;QACxB,IAAIC,aAAa,GAAG,EAAE;QACtB,IAAID,KAAK,IAAIE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAC;UAC9B,KAAK,MAAMnE,GAAG,IAAImE,KAAK,EAAC;YACpB,MAAMI,IAAI,GAAGJ,KAAK,CAACnE,GAAG,CAAC;YAEvB,MAAMwE,UAAU,GAAGD,IAAI,CAAC,YAAY,CAAC;YACrC,IAAIC,UAAU,KAAK,mBAAmB,EAAC;cACnCJ,aAAa,GAAGG,IAAI,CAAC,SAAS,CAAC,CAAC,cAAc,CAAC,CAAC,WAAW,CAAC;cAC5DR,qBAAqB,GAAGK,aAAa;cACrC;YACJ;UACJ;QACJ;MACJ;MACA,MAAMH,MAAM,GAAG,MAAMQ,WAAW,CAAC,CAAC;MAClC,IAAIC,GAAG,GAAGT,MAAM,aAANA,MAAM,wBAAAd,YAAA,GAANc,MAAM,CAAEU,IAAI,cAAAxB,YAAA,wBAAAC,oBAAA,GAAZD,YAAA,CAAcyB,OAAO,cAAAxB,oBAAA,uBAArBA,oBAAA,CAAuBsB,GAAG;MACpC,IAAIG,SAAS,GAAG,EAAE;MAClB,IAAIrB,QAAQ,GAAG,EAAE;MACjB,KAAK,MAAMsB,UAAU,IAAIJ,GAAG,EAAE;QAC1B,IAAIA,GAAG,CAACK,cAAc,CAACD,UAAU,CAAC,IAAIT,KAAK,CAACC,OAAO,CAACI,GAAG,CAACI,UAAU,CAAC,CAAC,EAAE;UAClED,SAAS,GAAGA,SAAS,CAACG,MAAM,CAACN,GAAG,CAACI,UAAU,CAAC,CAAC;QACjD;MACJ;MAEA,IAAID,SAAS,IAAIR,KAAK,CAACC,OAAO,CAACO,SAAS,CAAC,EAAC;QACtC,KAAK,MAAMI,QAAQ,IAAIJ,SAAS,EAAC;UAAA,IAAAK,mBAAA;UAC7B,IAAIC,UAAU,IAAAD,mBAAA,GAAGL,SAAS,CAACI,QAAQ,CAAC,cAAAC,mBAAA,uBAAnBA,mBAAA,CAAqBC,UAAU;UAChD,IAAIC,iBAAiB,GAAGD,UAAU,aAAVA,UAAU,uBAAVA,UAAU,CAAEC,iBAAiB;UACrD,IAAIA,iBAAiB,IAAI,OAAOD,UAAU,IAAI,QAAQ,EAAC;YACnD,IAAIE,SAAS,GAAG,EAAE;YAClB,IAAIC,WAAW,GAAG,KAAK;YAEvB,IAAIvB,qBAAqB,IAAIM,KAAK,CAACC,OAAO,CAACP,qBAAqB,CAAC,EAAC;cAC9D,KAAK,MAAMwB,WAAW,IAAIxB,qBAAqB,EAAC;gBAAA,IAAAyB,qBAAA,EAAAC,sBAAA;gBAC5C,IAAIH,WAAW,EAAE;gBAEjB,MAAMI,cAAc,IAAAF,qBAAA,GAAGzB,qBAAqB,CAACwB,WAAW,CAAC,cAAAC,qBAAA,uBAAlCA,qBAAA,CAAoCG,EAAE;gBAC7D,MAAMC,iBAAiB,IAAAH,sBAAA,GAAG1B,qBAAqB,CAACwB,WAAW,CAAC,cAAAE,sBAAA,uBAAlCA,sBAAA,CAAoCI,KAAK;gBACnE,IAAIT,iBAAiB,KAAKQ,iBAAiB,IAAIF,cAAc,EAAC;kBAC1D,KAAK,MAAM1B,QAAQ,IAAIvF,iBAAiB,EAAC;oBACrC;oBACA,IAAIwF,MAAM,GAAG,MAAMC,YAAY,CAACzF,iBAAiB,CAACuF,QAAQ,CAAC,CAAC;oBAC5D,IAAIG,KAAK,GAAGF,MAAM,CAACE,KAAK;oBACxB,IAAIC,aAAa,GAAG,EAAE;oBACtB,IAAID,KAAK,IAAIE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAC;sBAC9B,KAAK,MAAMnE,GAAG,IAAImE,KAAK,EAAC;wBAAA,IAAA2B,aAAA,EAAAC,cAAA;wBACpB,MAAMxB,IAAI,GAAGJ,KAAK,CAACnE,GAAG,CAAC;wBACvB,MAAMgG,iBAAiB,GAAGzB,IAAI,aAAJA,IAAI,wBAAAuB,aAAA,GAAJvB,IAAI,CAAE0B,OAAO,cAAAH,aAAA,uBAAbA,aAAA,CAAeI,SAAS;wBAClD,MAAMC,cAAc,GAAG5B,IAAI,aAAJA,IAAI,wBAAAwB,cAAA,GAAJxB,IAAI,CAAE0B,OAAO,cAAAF,cAAA,uBAAbA,cAAA,CAAeK,MAAM;wBAE5C,IAAIJ,iBAAiB,KAAK,aAAa,IAAI3B,KAAK,CAACC,OAAO,CAAC6B,cAAc,CAAC,EAAC;0BACrE,IAAIA,cAAc,CAACE,QAAQ,CAACX,cAAc,CAAC,EAAC;4BACxCJ,WAAW,GAAGf,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEoB,EAAE;4BACtB;0BACJ;wBACJ;sBACJ;oBACJ;oBAEA,IAAIL,WAAW,EAAE;kBACrB;gBACJ;cACJ;YACJ;YAEA,IAAIA,WAAW,EAAC;cACZ,KAAK,MAAMtB,QAAQ,IAAIvF,iBAAiB,EAAC;gBACrC;gBACA,IAAIwF,MAAM,GAAG,MAAMC,YAAY,CAACzF,iBAAiB,CAACuF,QAAQ,CAAC,CAAC;gBAC5D,IAAIG,KAAK,GAAGF,MAAM,CAACE,KAAK;gBACxB,IAAIA,KAAK,IAAIE,KAAK,CAACC,OAAO,CAACH,KAAK,CAAC,EAAC;kBAC9B,KAAK,MAAMnE,GAAG,IAAImE,KAAK,EAAC;oBACpB,MAAMI,IAAI,GAAGJ,KAAK,CAACnE,GAAG,CAAC;oBACvB,MAAMwB,SAAS,GAAG+C,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAE/C,SAAS;oBACjC,IAAIA,SAAS,KAAK8D,WAAW,EAAC;sBAC1BD,SAAS,CAACiB,IAAI,CAAC/B,IAAI,CAAC;oBACxB;kBACJ;gBACJ;gBAEA,IAAIc,SAAS,EAAE;kBACX;gBACJ;cACJ;YACJ;YAEA,IAAIA,SAAS,EAAC;cACV7B,QAAQ,CAAC4B,iBAAiB,CAAC,GAAGC,SAAS;YAC3C;UACJ;QACJ;MACJ;MAEA,IAAI7B,QAAQ,IAAIa,KAAK,CAACC,OAAO,CAACd,QAAQ,CAAC,EAAC;QACpCrF,WAAW,CAACqF,QAAQ,CAAC;;QAErB;QACA,IAAI+C,YAAY,GAAG,EAAE;QACrB,IAAIvG,GAAG,GAAG,CAAC;QACX,KAAK,MAAMwG,aAAa,IAAIhD,QAAQ,EAAC;UACjCxD,GAAG,IAAI,CAAC;UACR,IAAIyG,eAAe,GAAGhD,IAAI,CAACiD,SAAS,CAAClD,QAAQ,CAACgD,aAAa,CAAC,CAAC;UAC7D,IAAIxG,GAAG,KAAK,CAAC,EAAC;YACVuG,YAAY,GAAG,IAAIC,aAAa,KAAKC,eAAe,EAAE;UAC1D,CAAC,MAAI;YACDF,YAAY,GAAG,GAAGA,YAAY,KAAKC,aAAa,KAAKC,eAAe,EAAE;UAC1E;QACJ;QAEA,IAAIE,SAAS,GAAG,GAAG,GAACJ,YAAY,GAAC,GAAG;QACpCjD,YAAY,CAACsD,OAAO,CAAC,gBAAgB,EAAED,SAAS,CAAC;QAEjDhI,QAAQ,CAACuD,cAAc,CAAC,UAAU,CAAC,CAACyB,eAAe,CAAC,UAAU,CAAC;QAC/D,IAAIC,QAAQ,GAAGjF,QAAQ,CAACkF,sBAAsB,CAAC,SAAS,CAAC;QACzD,OAAMD,QAAQ,CAAC3B,MAAM,GAAG,CAAC,EAAE;UACvB2B,QAAQ,CAAC,CAAC,CAAC,CAAC1C,UAAU,CAAC4C,WAAW,CAACF,QAAQ,CAAC,CAAC,CAAC,CAAC;QACnD;MACJ;IACJ;IAEAX,oBAAoB,CAAC,CAAC;EAC1B,CAAC,EAAE,EAAE,CAAC;EAEN,eAAewB,WAAWA,CAAA,EAAG;IACzB,MAAMoC,QAAQ,GAAG,MAAMC,KAAK,CACxBtI,SAAS,EACT;MACIuI,OAAO,EAAG;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC;IACN,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,OAAOA,IAAI;EACf;EAEA,eAAe9C,YAAYA,CAAE1B,IAAI,EAAC;IAC9B,MAAMqE,QAAQ,GAAG,MAAMC,KAAK,CACxBtE,IAAI,EACJ;MACIuE,OAAO,EAAG;QACN,cAAc,EAAE,kBAAkB;QAClC,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC;IACN,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;IAElC,OAAOA,IAAI;EACf;EAEA,SAASC,6BAA6BA,CAACC,IAAI,EAAE;IACzC,MAAMtD,QAAQ,GAAGsD,IAAI,CAACtD,QAAQ;IAC9B,OAAOvB,MAAM,CAAC8E,IAAI,CAACvD,QAAQ,CAAC,CACvBwD,MAAM,CAAC,CAACC,GAAG,EAAEC,KAAK,KAAK;MACpB,IAAIC,KAAK,CAACD,KAAK,CAAC,EAAE;QACdD,GAAG,CAACC,KAAK,CAAC,GAAG1D,QAAQ,CAAC0D,KAAK,CAAC,CAACzF,KAAK;MACtC;MACA,OAAOwF,GAAG;IACd,CAAC,EAAE,CAAC,CAAC,CAAC;EACd;EAEA,SAASG,qBAAqBA,CAAC3I,KAAK,EAAE;IAClCA,KAAK,CAACwC,cAAc,CAAC,CAAC;IACtBnE,UAAU,CAAC,eAAe,CAAC;EAC/B;EAEA,SAASuK,oBAAoBA,CAAC5I,KAAK,EAAE;IACjCA,KAAK,CAACwC,cAAc,CAAC,CAAC;IAEtBnE,UAAU,CAAC,cAAc,CAAC;EAC9B;EAEA,SAASwK,qBAAqBA,CAAC7I,KAAK,EAAE;IAElC,OAAO,KAAK;IACZ,MAAM8I,UAAU,GAAG9I,KAAK,CAACE,MAAM,CAAC6I,OAAO,KAAK,IAAI;IAEhD,QAAQ/I,KAAK,CAACE,MAAM,CAAC+C,IAAI;MACrB,KAAK,kDAAkD;QACnDvE,+BAA+B,CAACoK,UAAU,CAAC;QAC3C;MACJ,KAAK,sDAAsD;QACvDlK,iCAAiC,CAACkK,UAAU,CAAC;QAC7C;MACJ,KAAK,wEAAwE;QACzEhK,4CAA4C,CAACgK,UAAU,CAAC;QACxD;MACJ,KAAK,sCAAsC;QACvC9J,4CAA4C,CAAC8J,UAAU,CAAC;QACxD;MACJ,KAAK,uCAAuC;QACxC5J,2CAA2C,CAAC4J,UAAU,CAAC;QACvD;IACR;EACJ;EAEA,SAASjF,SAASA,CAACF,IAAI,EAAE;IACrB,OAAO,IAAIqF,OAAO,CAAC,CAACC,OAAO,EAAEC,MAAM,KAAK;MACtC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;MAC/BD,MAAM,CAACE,aAAa,CAAC1F,IAAI,CAAC;MAC1BwF,MAAM,CAACG,MAAM,GAAG,MAAM;QACpBL,OAAO,CAACE,MAAM,CAAC/D,MAAM,CAAC;MACxB,CAAC;MACD+D,MAAM,CAACI,OAAO,GAAGL,MAAM;IACzB,CAAC,CAAC;EACN;EAEA,eAAepF,UAAUA,CAACP,SAAS,EAAE;IACjC,MAAMiG,GAAG,GAAG9J,WAAW;IACvB,IAAI;MACF,MAAMsI,QAAQ,GAAG,MAAMC,KAAK,CAACuB,GAAG,EAAE;QAChCC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAE9E,IAAI,CAACiD,SAAS,CAACtE,SAAS;MAChC,CAAC,CAAC;MAEF,IAAI,CAACyE,QAAQ,CAAC2B,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,oBAAoB5B,QAAQ,CAAC6B,MAAM,EAAE,CAAC;MACxD;MAEA,MAAM1B,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,CAAC,CAAC;MAElC,IAAIA,IAAI,CAAC2B,OAAO,IAAI,IAAI,EAAC;QACvBC,KAAK,CAAC,yCAAyCrK,WAAW,EAAE,CAAC;MAC/D;IACF,CAAC,CAAC,OAAOsK,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAACE,OAAO,CAAC;IAC9B;IACAH,KAAK,CAAC,yCAAyCrK,WAAW,EAAE,CAAC;EAC/D;EAEF,SAASyK,aAAaA,CAACnK,KAAK,EAAE;IAC1BA,KAAK,CAACwC,cAAc,CAAC,CAAC;IAEtB,MAAM4H,iBAAiB,GAAGtK,QAAQ,CAACuD,cAAc,CAAC,UAAU,CAAC;IAC7D,IAAIgH,uBAAuB,GAAGD,iBAAiB,aAAjBA,iBAAiB,uBAAjBA,iBAAiB,CAAEpH,KAAK;IAEtD,IAAI,CAACqH,uBAAuB,EAAC;MACzBN,KAAK,CAAC,2BAA2B,CAAC;MAClC,OAAO,KAAK;IAChB;IACA,IAAIO,0BAA0B,GAAGjL,QAAQ,CAACgL,uBAAuB,CAAC;IAGlE,IAAIC,0BAA0B,IAAI9E,KAAK,CAACC,OAAO,CAAC6E,0BAA0B,CAAC,EAAC;MACxE,IAAI/K,eAAe,CAACiI,QAAQ,CAAC6C,uBAAuB,CAAC,EAAC;QAClDN,KAAK,CAAC,wEAAwE,CAAC;QAC/E,OAAO,KAAK;MAChB;MAEA,IAAIQ,aAAa,GAAG,EAAE;MACtB,IAAIC,YAAY,GAAG,EAAE;MACrB,KAAK,MAAMC,QAAQ,IAAIH,0BAA0B,EAAC;QAC9C,MAAMtD,KAAK,GAAGsD,0BAA0B,CAACG,QAAQ,CAAC,CAAC,OAAO,CAAC;QAC3D,MAAMC,IAAI,GAAGJ,0BAA0B,CAACG,QAAQ,CAAC,CAAC,MAAM,CAAC;QACzD,IAAIE,UAAU,GAAG,EAAE;QACnB,IAAID,IAAI,IAAI,SAAS,EAAC;UAClBC,UAAU,GAAG,wBAAwBN,uBAAuB,IAAIrD,KAAK,iOAAiO;QAC1S,CAAC,MAAK,IAAI0D,IAAI,IAAI,MAAM,EAAC;UAAA,IAAAE,qBAAA,EAAAC,sBAAA,EAAAC,sBAAA;UACrB,IAAI1D,OAAO,IAAAwD,qBAAA,GAAGN,0BAA0B,CAACG,QAAQ,CAAC,cAAAG,qBAAA,wBAAAC,sBAAA,GAApCD,qBAAA,CAAsCxD,OAAO,cAAAyD,sBAAA,wBAAAC,sBAAA,GAA7CD,sBAAA,CAA+CE,YAAY,cAAAD,sBAAA,uBAA3DA,sBAAA,CAA6DE,SAAS;UACpF,IAAIC,WAAW,GAAG,EAAE;UACpB,IAAI7D,OAAO,IAAI5B,KAAK,CAACC,OAAO,CAAC2B,OAAO,CAAC,EAAC;YAClC,KAAK,MAAM8D,MAAM,IAAI9D,OAAO,EAAC;cAAA,IAAA+D,eAAA;cACzBF,WAAW,GAAG;AAC1C,kCAAkCA,WAAW;AAC7C,0CAD6C,CAAAE,eAAA,GACH/D,OAAO,CAAC8D,MAAM,CAAC,cAAAC,eAAA,uBAAfA,eAAA,CAAiBnE,KAAK;AAChE,6BAA6B;YACL;UACJ;UACA2D,UAAU,GAAG;AACjC,4CAA4CN,uBAAuB,IAAIrD,KAAK;AAC5E,0BAA0BiE,WAAW;AACrC;AACA,qBAAqB;QACL,CAAC,MAAI;UACDN,UAAU,GAAG,wBAAwBN,uBAAuB,IAAIrD,KAAK,+NAA+N;QACxS;QACAuD,aAAa,GAAG;AAChC,sBAAsBA,aAAa;AACnC;AACA,wEAAwEvD,KAAK;AAC7E,0BAA0B2D,UAAU;AACpC;AACA,iBAAiB;MACL;MAEA,IAAIJ,aAAa,EAAC;QACdC,YAAY,GAAG;AAC/B;AACA;AACA;AACA,oCAAoCH,uBAAuB;AAC3D;AACA;AACA,+CAA+CA,uBAAuB;AACtE;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0BE,aAAa;AACvC;AACA;AACA,aAAa;MACD;MAGA,MAAMa,eAAe,GAAGtL,QAAQ,CAACuD,cAAc,CAAC,iBAAiB,CAAC;MAClE,IAAI+H,eAAe,IAAIZ,YAAY,EAAC;QAChCY,eAAe,CAACC,kBAAkB,CAC9B,WAAW,EACXb,YACJ,CAAC;QAEDjL,eAAe,CAACkI,IAAI,CAAC4C,uBAAuB,CAAC;QAC7C7K,kBAAkB,CAACD,eAAe,CAAC;QAEnC6K,iBAAiB,CAACpH,KAAK,GAAG,EAAE;MAChC;IACJ;EACJ;EAEA,oBACI/E,OAAA;IAAKqN,SAAS,EAAC,uDAAuD;IAAAC,QAAA,eAClEtN,OAAA;MAAM6I,EAAE,EAAC;IAAmB;MAAA0E,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd;AAACxN,EAAA,CA5nBQD,QAAQ;AAAA0N,EAAA,GAAR1N,QAAQ;AA8nBjB,eAAeA,QAAQ;AAAC,IAAA0N,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}